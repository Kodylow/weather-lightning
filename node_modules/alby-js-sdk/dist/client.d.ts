import { RequestOptions } from "./request";
import { AuthClient, InvoiceRequestParams, KeysendRequestParams, SendPaymentRequestParams, SendBoostagramRequestParams, SendToAlbyRequestParams } from "./types";
export declare class Client {
    auth: AuthClient;
    defaultRequestOptions?: Partial<RequestOptions>;
    constructor(auth: string | AuthClient, requestOptions?: Partial<RequestOptions>);
    accountBalance(params: {}, request_options?: Partial<RequestOptions>): Promise<any>;
    accountSummary(params: {}, request_options?: Partial<RequestOptions>): Promise<any>;
    accountInformation(params: {}, request_options?: Partial<RequestOptions>): Promise<any>;
    accountValue4Value(params: {}, request_options?: Partial<RequestOptions>): Promise<any>;
    incomingInvoices(params: {}, request_options?: Partial<RequestOptions>): Promise<any>;
    outgoingInvoices(params: {}, request_options?: Partial<RequestOptions>): Promise<any>;
    getInvoice(paymentHash: string, request_options?: Partial<RequestOptions>): Promise<any>;
    createInvoice(invoice: InvoiceRequestParams, request_options?: Partial<RequestOptions>): Promise<any>;
    keysend(args: KeysendRequestParams | KeysendRequestParams[], request_options?: Partial<RequestOptions>): Promise<any>;
    sendPayment(params: SendPaymentRequestParams, request_options?: Partial<RequestOptions>): Promise<any>;
    sendBoostagram(args: SendBoostagramRequestParams | SendBoostagramRequestParams[], request_options?: Partial<RequestOptions>): Promise<any>;
    sendToAlbyAccount(args: SendToAlbyRequestParams, request_options?: Partial<RequestOptions>): Promise<any>;
}
//# sourceMappingURL=client.d.ts.map